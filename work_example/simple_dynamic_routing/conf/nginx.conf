worker_processes 1; 

error_log logs/error.log info; 
events {
    worker_connections 1024;
}

http {
    upstream baidu.com {
        server baidu.com;
    }

    upstream nginx.org {
        server nginx.org; 
    }

    server {
        listen 8080;
        location = /redis {
            internal;
            set_unescape_uri $key $arg_key;
            redis2_query get $key; 
            redis2_pass 127.0.0.1:6379;
        }

        location / {
            set $target '';
            access_by_lua '
                local key = ngx.var.http_user_agent
                print("The key: ", key)
                local res = ngx.location.capture(
                    "/redis", {args = {key = key}}
                )

                if res.status ~= 200 then 
                    ngx.log(ngx.ERR, "redis server returned bad status: ",
                        res.status)
                    ngx.exit(res.status)
                end

                if not res.body then
                    ngx.log(ngx.ERR, "redis returned empty body")
                    ngx.exit(500)
                end

                local parser = require "redis.parser"
                local server, typ = parser.parse_reply(res.body)

                if typ ~= parser.BULK_REPLY or not server then
                    ngx.log(ngx.ERR, "bad redis response: ", res.body)
                    ngx.exit(500)
                end

                print("The server: ", server)

                ngx.var.target = server
            ';

            proxy_pass http://$target;
        }
    }

}


# $ ./redis-server  # default port is 6379
# and feed some keys into this using the redis-cli utility:

# $ ./redis-cli
#    redis> set foo apache.org
#    OK
#    redis> set bar nginx.org
#    OK
# And then let's test our nginx app!

# $ curl --user-agent foo localhost:8080
#    <apache.org home page goes here>

#    $ curl --user-agent bar localhost:8080
#    <nginx.org home page goes here>

# upstream baidu.com {
#     server baidu.com;
# }
# upstream name 要和server name 一致