worker_processes 1;

pid logs/nginx.pid;
events {
  worker_connections 1024;
}

http {
  include mime.types;
  default_type text/html;
  lua_package_path "$prefix/lua/?.lua;;";

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  sendfile on;
  keepalive_timeout 60;

  lua_shared_dict upstreams 1m; # 声明一个ngx多进程全局共享内存区域，_G 作为基于shm的Lua字典的存储空间ngx.shared.<name>

  upstream default_upstream {
    server 127.0.0.1:8081;
    server 127.0.0.1:8082;
    hash $request_uri consistent;
  }

  upstream lua_upstream {                        # 配置后端服务器组
    server 127.0.0.1:8084;
    server 127.0.0.1:8083;
  }

  server {
    listen 8080;

    server_name localhost;

    access_log logs/access.log main;
    error_log logs/error.log error;

    location /_switch_upstream {
      content_by_lua_file lua/switch.lua;
    }

    location  / {
      set_by_lua_block $my_upstream {
        local ups = ngx.shared.upstreams:get(ngx.var.http_host)
        if ups ~= nil then
          ngx.log(ngx.ERR, "get [", ups,"] from ngx.shared")
          return ups
        end
        return "default_upstream"
      }

      proxy_next_upstream off;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwared-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_pass http://$my_upstream;

    }
  }

  server {
        listen       8081;
        server_name  localhost;

        location / {
            root   html;
            index  index81.html;
        }
    }

    server {
        listen       8082;
        server_name  localhost;

        location / {
            root   html;
            index  index82.html;
        }
    }

    server {
        listen       8083;
        server_name  localhost;

        location / {
            root   html;
            index  index83.html;
        }
    }

    server {
        listen       8084;
        server_name  localhost;

        location / {
            root   html;
            index  index84.html;
        }
    }


}